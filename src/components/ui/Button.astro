---
interface Props {
    variant?: "solid" | "outline";
    href?: string;
    onClick?: () => void;
    class?: string;
    size?: "small" | "medium" | "large";
}

const { 
    variant = "solid", 
    href, 
    onClick, 
    class: className,
    size = "medium" 
} = Astro.props;

const baseClasses =
    "flex items-center justify-center flex-auto font-inter font-bold leading-none m-0 outline-none text-center no-underline whitespace-nowrap border-0 select-none touch-manipulation rounded-xl transition-all duration-300 ease-out relative overflow-hidden";

const solidClasses =
    "bg-white text-black hover:shadow-[0_0_0_3px_#121212,0_8px_25px_rgba(255,255,255,0.15)] hover:bg-[#AFAFAF] active:scale-[0.98]";
const outlineClasses =
    "bg-transparent text-white border-2 border-white hover:bg-white hover:text-black hover:shadow-[0_4px_20px_rgba(255,255,255,0.2)] active:scale-[0.98]";

const variantClasses = variant === "solid" ? solidClasses : outlineClasses;

const sizeClasses = {
    small: "text-sm px-3 py-2 min-h-[40px] lg:text-base lg:px-4 lg:py-3 lg:min-h-[44px]",
    medium: "text-base px-4 py-3 min-h-[44px] lg:text-lg lg:px-6 lg:py-4 lg:min-h-[48px]",
    large: "text-lg px-6 py-4 min-h-[48px] lg:text-xl lg:px-8 lg:py-5 lg:min-h-[52px]"
};

const responsiveClasses = sizeClasses[size];

const Tag = href ? "a" : "button";
---

<Tag
    class={`${baseClasses} ${variantClasses} ${responsiveClasses} ${className} button-responsive`}
    {...href && { href }}
    {...onClick && { onClick }}
>
    <span class="button-content">
        <slot />
    </span>
    <div class="button-ripple"></div>
    <div class="button-shine"></div>
</Tag>

<style>
.button-responsive {
    min-width: 120px;
    max-width: 100%;
    width: auto;
    position: relative;
    transform: translateZ(0);
    backface-visibility: hidden;
    
    animation: buttonFadeIn 0.6s ease-out;
    
    .button-content {
        position: relative;
        z-index: 2;
        transition: transform 0.2s ease-out;
    }
    
    .button-ripple {
        position: absolute;
        top: 50%;
        left: 50%;
        width: 0;
        height: 0;
        border-radius: 50%;
        background: rgba(255, 255, 255, 0.3);
        transform: translate(-50%, -50%);
        transition: width 0.6s ease-out, height 0.6s ease-out, opacity 0.6s ease-out;
        opacity: 0;
        pointer-events: none;
        z-index: 1;
    }
    
    .button-shine {
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(
            90deg,
            transparent,
            rgba(255, 255, 255, 0.2),
            transparent
        );
        transition: left 0.6s ease-out;
        z-index: 1;
    }
    
    &:hover {
        transform: translateY(-2px) translateZ(0);
        
        .button-content {
            transform: scale(1.02);
        }
        
        .button-shine {
            left: 100%;
        }
    }
    
    &:active {
        transform: translateY(-1px) scale(0.98) translateZ(0);
        transition: transform 0.1s ease-out;
        
        .button-ripple {
            width: 300px;
            height: 300px;
            opacity: 1;
        }
    }
    
    &:focus-visible {
        outline: 2px solid #fff;
        outline-offset: 2px;
        animation: focusPulse 2s ease-in-out infinite;
    }
    
    @media (max-width: 480px) {
        min-height: 44px;
        font-size: 0.875rem;
        padding: 0.75rem 1rem;
        border-radius: 0.75rem;
        letter-spacing: 0.025em;
        
        &:hover {
            transform: translateY(-1px) translateZ(0);
        }
        
        &:active {
            transform: scale(0.96) translateZ(0);
        }
    }
    
    @media (max-width: 360px) {
        min-height: 40px;
        font-size: 0.8125rem;
        padding: 0.625rem 0.875rem;
        border-radius: 0.625rem;
        min-width: 100px;
        
        &:hover {
            transform: translateY(-0.5px) translateZ(0);
        }
    }
    
    @media (min-width: 481px) and (max-width: 768px) {
        min-height: 46px;
        font-size: 0.9375rem;
        padding: 0.875rem 1.25rem;
        min-width: 140px;
        
        &:hover {
            transform: translateY(-1.5px) translateZ(0);
        }
    }
    
    @media (min-width: 769px) {
        min-height: 48px;
        min-width: 160px;
        
        &:hover {
            transform: translateY(-3px) translateZ(0);
            
            .button-content {
                transform: scale(1.05);
            }
        }
        
        &:active {
            transform: translateY(-1px) scale(0.98) translateZ(0);
        }
    }
    
    @media (min-width: 1200px) {
        min-height: 52px;
        font-size: 1.125rem;
        padding: 1rem 2rem;
        min-width: 180px;
        
        &:hover {
            transform: translateY(-4px) translateZ(0);
        }
    }
    
    &.outline-variant {
        @media (max-width: 480px) {
            border-width: 1.5px;
        }
        
        @media (min-width: 769px) {
            border-width: 2px;
        }
        
        .button-shine {
            background: linear-gradient(
                90deg,
                transparent,
                rgba(255, 255, 255, 0.1),
                transparent
            );
        }
        
        &:hover {
            .button-shine {
                background: linear-gradient(
                    90deg,
                    transparent,
                    rgba(0, 0, 0, 0.1),
                    transparent
                );
            }
        }
    }
    
    &.loading {
        position: relative;
        color: transparent;
        pointer-events: none;
        
        .button-content {
            opacity: 0;
        }
        
        &::after {
            content: '';
            position: absolute;
            width: 16px;
            height: 16px;
            border: 2px solid transparent;
            border-top: 2px solid currentColor;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            color: inherit;
            z-index: 3;
        }
        
        @media (max-width: 480px) {
            &::after {
                width: 14px;
                height: 14px;
            }
        }
    }
    
    &:disabled {
        opacity: 0.6;
        cursor: not-allowed;
        pointer-events: none;
        transform: none;
        animation: none;
        
        .button-shine {
            display: none;
        }
    }
    
    &.success {
        animation: successPulse 0.6s ease-out;
        
        &::before {
            content: 'âœ“';
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%) scale(0);
            animation: checkmarkPop 0.4s ease-out 0.2s forwards;
            z-index: 3;
            font-size: 1.2em;
        }
        
        .button-content {
            opacity: 0;
            transform: scale(0.8);
        }
    }
    
    &.error {
        animation: errorShake 0.5s ease-out;
        background: #ff4444 !important;
        border-color: #ff4444 !important;
    }
    
    @media (prefers-contrast: high) {
        border-width: 2px;
        font-weight: 700;
        
        .button-shine {
            display: none;
        }
    }
    
    @media (prefers-reduced-motion: reduce) {
        transition: background-color 0.2s ease, color 0.2s ease;
        animation: none;
        
        &:hover {
            transform: none;
        }
        
        &:active {
            transform: scale(0.98);
        }
        
        .button-content,
        .button-shine,
        .button-ripple {
            transition: none;
            animation: none;
        }
        
        &:focus-visible {
            animation: none;
        }
    }
    
    @media print {
        background: transparent !important;
        color: black !important;
        border: 1px solid black !important;
        box-shadow: none !important;
        transform: none !important;
        animation: none !important;
        
        .button-shine,
        .button-ripple {
            display: none;
        }
    }
}

@keyframes buttonFadeIn {
    from {
        opacity: 0;
        transform: translateY(10px) translateZ(0);
    }
    to {
        opacity: 1;
        transform: translateY(0) translateZ(0);
    }
}

@keyframes focusPulse {
    0%, 100% {
        outline-color: rgba(255, 255, 255, 0.8);
    }
    50% {
        outline-color: rgba(255, 255, 255, 1);
    }
}

@keyframes spin {
    to {
        transform: translate(-50%, -50%) rotate(360deg);
    }
}

@keyframes successPulse {
    0% {
        transform: scale(1);
        background: var(--original-bg);
    }
    50% {
        transform: scale(1.05);
        background: #22c55e;
    }
    100% {
        transform: scale(1);
        background: #22c55e;
    }
}

@keyframes checkmarkPop {
    0% {
        transform: translate(-50%, -50%) scale(0);
        opacity: 0;
    }
    50% {
        transform: translate(-50%, -50%) scale(1.2);
        opacity: 1;
    }
    100% {
        transform: translate(-50%, -50%) scale(1);
        opacity: 1;
    }
}

@keyframes errorShake {
    0%, 100% {
        transform: translateX(0);
    }
    25% {
        transform: translateX(-5px);
    }
    75% {
        transform: translateX(5px);
    }
}

.button-container {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
    
    @media (max-width: 480px) {
        gap: 0.75rem;
        flex-direction: column;
        width: 100%;
        
        .button-responsive {
            width: 100%;
            max-width: 280px;
            animation-delay: calc(var(--index, 0) * 0.1s);
        }
    }
    
    @media (min-width: 481px) and (max-width: 768px) {
        gap: 0.875rem;
        justify-content: center;
    }
    
    @media (min-width: 769px) {
        gap: 1.25rem;
        justify-content: flex-start;
        
        .button-responsive {
            animation-delay: calc(var(--index, 0) * 0.05s);
        }
    }
}

.button-group {
    .button-responsive:nth-child(1) { animation-delay: 0s; }
    .button-responsive:nth-child(2) { animation-delay: 0.1s; }
    .button-responsive:nth-child(3) { animation-delay: 0.2s; }
    .button-responsive:nth-child(4) { animation-delay: 0.3s; }
}

.button-full-mobile {
    @media (max-width: 768px) {
        width: 100%;
        max-width: none;
    }
}

.button-compact {
    @media (max-width: 480px) {
        min-height: 36px;
        font-size: 0.75rem;
        padding: 0.5rem 0.75rem;
        min-width: 80px;
        
        &:hover {
            transform: translateY(-0.5px) translateZ(0);
        }
    }
}

.button-floating {
    border-radius: 50%;
    width: 56px;
    height: 56px;
    min-width: 56px;
    padding: 0;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    
    &:hover {
        transform: translateY(-2px) scale(1.1) translateZ(0);
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
    }
    
    @media (max-width: 480px) {
        width: 48px;
        height: 48px;
        min-width: 48px;
    }
}
</style>